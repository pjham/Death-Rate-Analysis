data[["value"]][["IndicatorCode"]]
data[["value"]][["IndicatorCode"]][121]
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][103])
indiRes <- GET(link)
View(indiRes)
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][103])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiData$content))
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][103])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
indiData
View(indiData)
indiData[["value"]][["TimeDimensionValue"]]
indiData[["value"]][["Value"]]
lionk
link
indiData[["value"]][["SpatialDim"]]
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][112])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
indiData
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value,rownames(c("Country code","Value")))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
df
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
}
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
df
}
extractData(103)
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- res$content
ccdata <- rawToChar(data)
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
View(ccdata)
df <- data.frame(ccdata$value)
View(df)
viewCC <- funtion()
viewCC <- function()
{
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
df <- data.frame(ccdata$value)
df
}
library(httr)
library(jsonlite)
library(httr)
library(jsonlite)
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
data[["value"]][["IndicatorName"]]
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
df
}
viewCC <- function()
{
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
df <- data.frame(ccdata$value)
df
}
gc()
library(httr)
library(jsonlite)
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
data[["value"]][["IndicatorName"]]
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
df
}
viewCC <- function()
{
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
df <- data.frame(ccdata$value)
df
}
library(httr)
library(jsonlite)
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
gc()
library(httr)
library(jsonlite)
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
data[["value"]][["IndicatorName"]]
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
df
}
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
df
return(indiData)
}
extractData(1)
View(extractData)
View(extractData)
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
df
#return(indiData)
}
extractData(1)
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
df
return(indiData)
}
indiNames <- data[["value"]][["IndicatorName"]]
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
View(indiNames)
View(data)
View(indiNames)
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%20rates%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
View(indiNames)
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$Value)
colnames(df) <- c("Country Code","Value")
return(indiData)
}
extracted <- extractData(1)
View(extracted)
View(extracted)
View(extracted[["value"]])
extracted <- extractData(2)
View(extracted)
View(extracted[["value"]])
View(indiNames)
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
extracted <- extractData(1)
View(extracted)
View(extracted[["value"]])
extracted <- extractData(3)
View(extracted)
View(extracted[["value"]])
View(res)
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
View(data)
View(data[["value"]])
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$TimeDim,indiData$value$Value)
colnames(df) <- c("Country Code","Year","Value")
return(df)
}
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$TimeDim,indiData$value$NumericValue)
colnames(df) <- c("Country Code","Year","Value")
return(indiData)
}
extracted <- extractData(1)
extracted <- extractData(1)
View(extracted)
View(extracted[["value"]])
extracted <- extractData(1)
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$TimeDim,indiData$value$NumericValue)
colnames(df) <- c("Country Code","Year","Value")
return(df)
}
#indices of relatable data
i <- array(c(3,7,13,22,39,41,43,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,95,97,106,109,120))
for (x in i)
{
extracted <- extractData(x)
save(extracted,paste0(data[["value"]][["IndicatorCode"]][n]),".Rdata")
}
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$TimeDim,indiData$value$NumericValue)
colnames(df) <- c("Country Code","Year","Value")
return(df)
}
viewCC <- function()
{
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
df <- data.frame(ccdata$value)
df
}
#indices of relatable data
i <- array(c(3,7,13,22,39,41,43,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,95,97,106,109,120))
for (x in i)
{
extracted <- extractData(x)
save(extracted,paste0(data[["value"]][["IndicatorCode"]][n]),".Rdata")
}
extractData(1)
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$TimeDim,indiData$value$NumericValue)
colnames(df) <- c("Country Code","Year","Value")
return(df)
}
extractData(1)
viewCC <- function()
{
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
df <- data.frame(ccdata$value)
df
}
#indices of relatable data
i <- array(c(3,7,13,22,39,41,43,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,95,97,106,109,120))
setwd("~/Library/CloudStorage/OneDrive-IITKanpur/IITK sem 3/MTH208A/Project")
for (x in i)
{
extracted <- extractData(x)
save(extracted,paste0(data[["value"]][["IndicatorCode"]][n]),".Rdata")
}
for (x in i)
{
extracted <- extractData(x)
save(extracted,paste0(data[["value"]][["IndicatorCode"]][n],".Rdata"))
}
for (x in i)
{
extracted <- extractData(x)
save(extracted,paste0(data[["value"]][["IndicatorCode"]][n],".Rdata"))
}
for (x in i)
{
extracted <- extractData(x)
save(extracted,file = paste0(data[["value"]][["IndicatorCode"]][n],".Rdata"))
}
for (x in i)
{
extracted <- extractData(x)
save(extracted,file = paste0(data[["value"]][["IndicatorCode"]][x],".Rdata"))
}
library(httr)
library(jsonlite)
#Using API to extract data from WHO website
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
View(res)
View(data)
View(indiNames)
View(indiNames)
indiNames
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
#relatable data extracted and saved using the loop
n <-7
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData)
View(indiData[["value"]])
#relatable data extracted and saved using the loop
n <-16
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData)
View(indiData[["value"]])
#relatable data extracted and saved using the loop
n <-52
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData[["value"]])
n <-58
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData[["value"]])
n <-15
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData[["value"]])
n <- 44
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData[["value"]])
View(indiData)
View(indiData[["value"]])
n <-43
View(indiData[["value"]])
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData)
View(indiData[["value"]])
View(indiNames)
n <-46
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData)
View(indiData[["value"]])
View(indiData)
View(indiData[["value"]])
View(indiNames)
n <-49
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData)
View(indiData[["value"]])
n <- 75
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData)
View(indiData[["value"]])
n <-76
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
View(indiData)
View(indiData[["value"]])
len(i)
length(i0)
length(i)
#indices of relatable data are stored in i
i <- array(c(13,20,22,29,32,39,41,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,85,91,94,95,97,103,109,112,113,120))
length(i)
library(httr)
library(jsonlite)
#Using API to extract data from WHO website
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
# indiNames contains topic headings regarding which data is available to extract, we have filtered it contain the word 'death'
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$TimeDim,indiData$value$NumericValue)
colnames(df) <- c("Country Code","Year","Value")
return(indiData)
}
#extractData function extracts data for indicator name whose serial number is n
viewCC <- function()
{
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
df <- data.frame(ccdata$value)
df
}# thic function shows country codes and countries
#indices of relatable data are stored in i
i <- array(c(13,20,22,29,32,39,41,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,85,91,94,95,97,103,109,112,113,120))
for (x in i)
{
extracted <- extractData(x)
save(extracted,file = paste0(data[["value"]][["IndicatorCode"]][x],".Rdata"))
}
setwd("~/Library/CloudStorage/OneDrive-IITKanpur/IITK sem 3/MTH208A/group-project-20/Extraction Raw Data")
library(httr)
library(jsonlite)
#Using API to extract data from WHO website
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
library(httr)
library(jsonlite)
#Using API to extract data from WHO website
res <- GET("https://ghoapi.azureedge.net/api/Indicator?$filter=contains(IndicatorName,%20%27Death%27)")
data <- res$content
data <- rawToChar(data)
data <- fromJSON(data)
indiNames <- as.data.frame(data[["value"]][["IndicatorName"]])
# indiNames contains topic headings regarding which data is available to extract, we have filtered it contain the word 'death'
extractData <- function(n)
{
link <- paste0("https://ghoapi.azureedge.net/api/",data[["value"]][["IndicatorCode"]][n])
indiRes <- GET(link)
indiData <- fromJSON(rawToChar(indiRes$content))
df <- data.frame(indiData$value$SpatialDim,indiData$value$TimeDim,indiData$value$NumericValue)
colnames(df) <- c("Country Code","Year","Value")
return(indiData)
}
#extractData function extracts data for indicator name whose serial number is n
viewCC <- function()
{
ccres <- GET("https://ghoapi.azureedge.net/api/DIMENSION/COUNTRY/DimensionValues")
ccdata <- ccres$content
ccdata <- rawToChar(ccdata)
ccdata <- fromJSON(ccdata)
df <- data.frame(ccdata$value)
df
}# thic function shows country codes and countries
#indices of relatable data are stored in i
i <- array(c(13,20,22,29,32,39,41,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,85,91,94,95,97,103,109,112,113,120))
for (x in i)
{
extracted <- extractData(x)
save(extracted,file = paste0(data[["value"]][["IndicatorCode"]][x],".Rdata"))
}
#relatable data extracted and saved using the loop
View(df)
load("/Users/pj/Library/CloudStorage/OneDrive-IITKanpur/IITK sem 3/MTH208A/group-project-20/Extraction Raw Data/Age-standardized death rates, breast cancer, per 100,000.Rdata")
View(df)
View(df)
